#summary Tracking updates

= Google Summer of Code Project =
----
==Objective==
The main goal of this project will be the integration of important phylogenetic tools for ancestral state reconstruction and rate testing (via Brownie) into a commonly used scripting environment (R).  As R is a cross-platform scripting environment for which there are currently external packages to read-in and manipulate genetic and phylogenetic data.  R is an ideal place to port the functions contained in Brownie due to its robust linkage to C/C++ (innately and through external packages) and because of its potential to act as a staging area for all steps in phylogenetic data analysis, from reading in genetic data to running analyses to plotting the results.


==Project Executors==
 * [http://www.conradstack.info Conrad Stack ] 
 * [http://www.webpages.uidaho.edu/~lukeh/ Luke Harmon ]
 * [http://www.brianomeara.info/ Brian O'Meara ]

==Final thoughts==
Anyone please feel free to contact me (conrad.stack@gmail) with any suggestions for improvement or general comments.  
<br><br>
Also check the [http://www.conradstack.info project blog] for exciting technical updates and random thoughts, displaying in near-real time!  

<br><br>



= Development progress (updated weekly) =
Note:  The initial project proposal can be seen [http://docs.google.com/Doc?docid=0AcvZ2biv57wNZHpnZmI0c18xMDJjNHo2Y3JmaA&hl=en here].  The development progress described below will roughly follow this, but may deviate sharply if our strategy changes regarding how the implementation should be done.

----

===05/05/2010===
 * Tasks:
 - Created this page

----

===05/17/2010===
 * Tasks:
  * Setup build environment for brownie and related R-package on windows, linux, and mac boxes
  * Background reading {{{[1]}}}
  * Setup [http://www.conradstack.info project blog]
  * Step through brownie to get familiar with project structure and coding style. {{{[2]}}}


 * Links:
  # [http://www.amazon.com/Computational-Molecular-Evolution-Oxford-Ecology/dp/0198567022/ref=sr_1_1?ie=UTF8&s=books&qid=1273644680&sr=8-1 Computational Molecular Evolution]
  # [http://bodegaphylo.wikispot.org/Morphological_Diversification_and_Rates_of_Evolution Brownie Tutorial]
----


===05/24/2010===
 * Add Rpack to brownie source branch
  * Add configuration script which copies current Brownie build into Rpack, builds R package
 * Add phylobase, Rcpp requirements to Rpack
  * R functions which checks for singleton nodes and convert them to SIMMAP format (supported by Brownie)
  * R functions which take sufficient data (tree, taxsets, data, characters) and outputs them to a Brownie-compatible nexus format
   * NOTE: This suite of data will be streamed to Brownie
 * Stubs in Brownie to calculate confidence intervals
  * Discuss with Brian how these should be calculated
  * Determine input/output types
 * Build Brownie source under R compilation process with Rpack subdir
  * Add new configuration requirements
  * More streamlined Makefile.in and Makefile.win for compiling Brownie source.
----


===05/31/2010===
 * R Brownie compilation:
  * Complete Brownie compilation through R (excluding newer confidence interval tests)
  * Hard code tests (and test files) which run basic brownie functions (testing for runtime errors)
 * R-Brownie interface:
  * R functions which take sufficient data (tree, taxsets, data, characters) and outputs them to a Brownie-compatible nexus format
  * Pass information from phylobase to C++
  * Pass tree, data from C++ to phylobase
   * Conversion might be able to be done by Rcpp using as() function, but could also be done in R
  * Stubs for desired functions in R
   * Associated stubs for documentation
 * Brownie additions:
  * Begin extensive runtime tests of confidence interval tests

----


===06/07/2010===
 * R Brownie compilation:
  * Hard code tests for confidence interval finding. 
 * R-Brownie interface:
  * Define stubs for functions that will need to included in R package
   * Discuss final list with Luke, Brian
   * Initial ideas:
    * Read in or specify character data
    * Read in from csv or Excel file
    * Read in from Nexus file
    * Read in or specify set of trees
    * Read in set of posterior trees (with weights!) from BEAST, MrBayes, etc.
    * Read in or specify directly the nexus files, SIMMAP files to be used
    * Collate all necessary elements into temporary nexus file
    * Specify rate model
    * Specify output file
    * Check for necessary elements (taxa, characters, trees, assumptions)
    * Run ratetest (censored, uncensored)
    * Run ancestral state reconstruction    
    * Generic functions (S4 style)
  * Generate documentation files (latex)
 * Brownie additions
  * Finish any debugging that is necessary
----



===06/14/2010===
 * Debugging of confidence interval code:
  * Confidence interval comparisons with other phylogenetic packages (e.g. HYPHY, BEAST)
 * R-Brownie interface:
  * C++ classes for handling data passage between R package and libBrownie
  * Begin R coding to pass data to C++ interface and retrieve results
  * Unit tests for each major function
  * Document (latex) as progress is made on each function
 * R front-end
  * Plan out list of methods and classes to add.
  * Plan out which features of ape and/or phylobase to use
----




===06/21/2010===
 * Debugging of confidence interval code:
  * Confidence interval comparisons with other phylogenetic packages (e.g. HYPHY, BEAST)
 * R-Brownie interface:
  * Thorough testing of the interface functions
  * Choose examples to eventually become vignettes
 * R front-end
  * Begin writing method and class code
  * Start latex documentation for each function
----



===06/28/2010===
 * Debugging of confidence interval code:
  * Confidence interval comparisons with other phylogenetic packages (e.g. HYPHY, BEAST)
 * R-Brownie interface:
  * Should be nearly complete, but will still have bugs
 * R front-end
  * Continue writing method and class code
  * Continue documentation
  * Begin vignettes
 * Start and complete formal mid-term evaluation
----


===07/5/2010===
 * Start/Finish prototype of confidence interval additions
 * Streamline brownie interface
  * Add more needed functions to dlInterface class
  * Rework package to utilize Rcpp Modules (remove wrapper from dlInterface) 
 * Add stubs for ALL R functions that will be included in first release
 * Started midterm review
 * Work on Latex documentation
----



